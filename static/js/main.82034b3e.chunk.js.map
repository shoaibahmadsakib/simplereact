{"version":3,"sources":["EffectWidth.js","ItemValue.js","TodoList.js","App.js","index.js"],"names":["EffectWidth","ItemValue","props","className","text","style","background","color","padding","onClick","onSelect","id","TodoList","useState","value","setValue","item","setItem","deleteItem","console","log","oldItem","filter","sss","index","type","placeholder","onChange","e","target","map","hereItem","App","ReactDOM","render","document","getElementById"],"mappings":"yMAsBeA,I,OCFAC,MAlBf,SAAmBC,GAGf,OACI,qBAAKC,UAAW,aAAhB,SAEI,+BAECD,EAAME,KACP,iCAAQ,sBAAMC,MAAO,CAACC,WAAW,QAASC,MAAM,QAAQC,QAAQ,YAAaC,QAAS,WAClFP,EAAMQ,SAASR,EAAMS,KADjB,uBCwCLC,MAhDf,WAAqB,IAAD,EAEIC,mBAAS,SAFb,mBAEbC,EAFa,KAEPC,EAFO,OAGGF,mBAAS,CAAC,UAHb,mBAGbG,EAHa,KAGPC,EAHO,KAeVC,EAAY,SAACP,GACnBQ,QAAQC,IAAI,UAEXH,GAAQ,SAACI,GACL,OAAOA,EAAQC,QAAO,SAAEC,EAAIC,GACxB,OAAOA,IAAUb,SAK1B,OACI,gCAEQ,uBAAOc,KAAK,OAAOC,YAAY,mBAAmBC,SAvB9C,SAACC,GACjBb,EAASa,EAAEC,OAAOf,UAwBN,wBAAQL,QArBH,WACdQ,GAAS,SAAAI,GACL,MAAM,GAAN,mBAAWA,GAAX,CAAoBP,QAmBf,eAEJ,6BAGQE,EAAKc,KAAI,SAACC,EAAUP,GAClB,OAAO,cAAC,EAAD,CAEPb,GAAIa,EACJpB,KAAO2B,EACPrB,SAAWQ,GAHNM,YCzBZQ,EATL,WACP,OACE,sBAAK7B,UAAU,MAAf,UACE,uCACA,cAAC,EAAD,QCJP8B,IAASC,OAEL,cAAC,EAAD,IAEFC,SAASC,eAAe,W","file":"static/js/main.82034b3e.chunk.js","sourcesContent":["import React,{useState,useEffect} from 'react'\r\n\r\nfunction EffectWidth() {\r\n\r\n    const [width ,setWidth] =useState(window.screen.width);\r\n\r\n    const actualWidth =()=>{\r\n   \r\n      setWidth()\r\n    }\r\n    useEffect(() => {\r\n       window.addEventListener(\"resize\",actualWidth)\r\n    })\r\n\r\n    return (\r\n        <div>\r\n            <p>something is happened</p>\r\n            <h1>{width}</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EffectWidth\r\n","import React from 'react'\r\n\r\nfunction ItemValue(props) {\r\n\r\n   \r\n    return (\r\n        <div className =\"todo_style\"> \r\n       \r\n            <li>\r\n          \r\n            {props.text}\r\n            <button><span style={{background:'black', color:\"white\",padding:'0px 10px'}} onClick={()=>{\r\n                props.onSelect(props.id)\r\n            }}>-</span></button>\r\n            </li>\r\n           \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ItemValue\r\n","import React, { useState, } from 'react'\r\nimport ItemValue from './ItemValue';\r\n\r\nfunction TodoList() {\r\n\r\nconst [value,setValue] =useState(\"sakib\");\r\nconst [item ,setItem] =useState([\"sakib\"]);\r\n\r\n   const changeHere=(e)=>{\r\n    setValue(e.target.value)\r\n   }\r\n    \r\n   const changeClick=()=>{\r\n       setItem((oldItem =>{\r\n           return [...oldItem ,value]\r\n       }))\r\n}\r\n//last part\r\n    const deleteItem =(id)=>{\r\n    console.log(\"delete\");\r\n    \r\n     setItem((oldItem) =>{\r\n         return oldItem.filter(( sss,index)=>{\r\n             return index !== id;\r\n         })\r\n     })\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            \r\n                <input type=\"text\" placeholder=\"here is the list\" onChange={changeHere} \r\n                />\r\n                <button onClick={changeClick}>+</button>\r\n         \r\n            <ul>\r\n                {/* <li>{value}</li> */}\r\n                {\r\n                    item.map((hereItem, index)  =>{\r\n                      return <ItemValue \r\n                      key={index} \r\n                      id={index} \r\n                      text ={hereItem}\r\n                      onSelect ={deleteItem} />\r\n                    })\r\n                }\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TodoList\r\n","import React from 'react'\n\nimport './App.css';\nimport EffectWidth from './EffectWidth';\nimport TodoList from './TodoList';\n\nconst App=() =>{\n   return(\n     <div className=\"App\">\n       <h2>width</h2>\n       <TodoList/>\n       {/* <EffectWidth/> */}\n     </div>\n   )\n}\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n \n    <App />,\n \n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}